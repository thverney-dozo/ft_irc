-Un très beau Makefile
-Des .cpp associés aux .hpp parce que en #includant les .hpp entre eux il peut y avoir des redefinitions de fonctions à la compilation 
-ajout d'une fonction split pour recupérer toute la commande et y accéde. Pour /JOIN #chan splited_cmd[0] = /JOIN et splited_cmd[1] = #chan
-une classe Command avec un typedef de fonction normative (cmd_splitée ,*serv,*client);
- initialisation des fonctions dans une map stockée dans la classe Server
-ligne 129 à 131

129 cherche la commande dans la map
130 check si j'ai trouvé une commande
131 execute la fonction associée à la commande trouvée

129     std::map<std::string, Command>::iterator find_cmd = this->cmd.find(splited_cmd[0]); // Cherche la command
130     if (find_cmd != cmd.end())
131         (*find_cmd).second.exe(splited_cmd, this, (*it));